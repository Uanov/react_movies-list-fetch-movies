{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","Title","Plot","Poster","imdbID","className","src","alt","href","MoviesList","movies","map","movie","key","FindMovie","addMovies","useState","setMovie","movieTitle","setMovieTitle","htmlFor","type","id","placeholder","value","onChange","e","target","onClick","url","fetch","then","response","ok","Error","status","statusText","json","result","App","data","setMovies","find","item","ReactDOM","render","document","getElementById"],"mappings":"2uEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,YAFuB,MAEhB,GAFgB,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,OAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAI,qCAAgCJ,IAAvC,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAMR,QAAYQ,SCL3BE,G,MAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EAChBC,mBAAS,IADO,mBACnCJ,EADmC,KAC5BK,EAD4B,OAEND,mBAAS,IAFH,mBAEnCE,EAFmC,KAEvBC,EAFuB,KAa1C,OACE,oCACE,0BAAMd,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQe,QAAQ,eAAjC,eAGA,yBAAKf,UAAU,WACb,2BACEgB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZlB,UAAU,kBACVmB,MAAON,EACPO,SAAU,SAACC,GACTP,EAAcO,EAAEC,OAAOH,WAI3BZ,IAAUA,EAAMX,OAChB,uBAAGI,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEgB,KAAK,SACLhB,UAAU,kBACVuB,QAxCM,WCRI,IAAAC,KDSXX,ECTkBY,MAAM,GAAD,OAFnB,+CAEmB,OAAeD,IAChDE,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,WDIbN,MAAK,SAAAO,GAAM,OAAIrB,EAASqB,QAmCnB,iBASF,yBAAKjC,UAAU,WACb,4BACEgB,KAAK,SACLhB,UAAU,oBACVuB,QAAS,WACHhB,EAAMX,QACRc,EAAUH,GA9CxBK,EAAS,OAyCD,sBAgBN,yBAAKZ,UAAU,aACZO,EAAMX,OAEL,oCACE,wBAAII,UAAU,SAAd,WACA,kBAAC,EAAcO,Q,OExEd2B,EAAM,WAAO,IAAD,EACKvB,mBAASwB,GADd,mBAChB9B,EADgB,KACR+B,EADQ,KAQvB,OACE,yBAAKpC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWU,UAZC,SAACH,GACZF,EAAOgC,MAAK,SAAAC,GAAI,OAAIA,EAAKvC,SAAWQ,EAAMR,WAC7CqC,EAAU,GAAD,mBAAK/B,GAAL,CAAaE,WCL5BgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f8dd7cc6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Plot = '',\n  Poster,\n  imdbID,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Plot: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovies }) => {\n  const [movie, setMovie] = useState('');\n  const [movieTitle, setMovieTitle] = useState('');\n\n  const findMovie = () => {\n    getMovie(movieTitle)\n      .then(result => setMovie(result));\n  };\n\n  const clearMovie = () => {\n    setMovie('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={movieTitle}\n              onChange={(e) => {\n                setMovieTitle(e.target.value);\n              }}\n            />\n          </div>\n          {(movie && !movie.Title) && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie.Title) {\n                  addMovies(movie);\n                  clearMovie();\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie.Title\n        && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        )\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovies: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=cfe9a10e&t=';\n\nexport const getMovie = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n  const addMovies = (movie) => {\n    if (!movies.find(item => item.imdbID === movie.imdbID)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovies={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}